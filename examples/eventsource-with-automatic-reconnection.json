[
    {
        "id": "75bc72a16c4da2c8",
        "type": "subflow",
        "name": "Create Hue Application Key",
        "info": "# Overview\n\nInvoke the Hue Bridge API to create a client access token.\n\n_**N.B.:** Invoke this subflow within 30 seconds of pressing the button on top of the bridge. Watch the debug console output to see the response. If successful, you will see the generated key among the response payload's properties._\n\nSee <https://developers.meethue.com/develop/hue-api-v2/getting-started/> for details.\n\n# Configuration\n\n| Environment Variable | Description                                    |\n|----------------------|------------------------------------------------|\n|`ADDRESS`             | Bridge's IP address                            |\n| `USERNAME`           | \"User name\" for which a key is being generated |\n\n# Input\n\nIncoming message triggers HTTP request but is otherwise ignored.\n\n# Output\n\nThe HTTP response will be sent as a parsed JSON object. If successful, look for the value of the `msg.payload.success.username` property in the output. That is the string you should use as the access token header in all subsequent Hue Bridge API request messages.",
        "category": "",
        "in": [
            {
                "x": 40,
                "y": 40,
                "wires": [
                    {
                        "id": "7316ae1eef4c6295"
                    }
                ]
            }
        ],
        "out": [
            {
                "x": 440,
                "y": 40,
                "wires": [
                    {
                        "id": "e4718ecfdb248cc7",
                        "port": 0
                    }
                ]
            }
        ],
        "env": [
            {
                "name": "ADDRESS",
                "type": "str",
                "value": ""
            },
            {
                "name": "USERNAME",
                "type": "str",
                "value": ""
            }
        ],
        "meta": {
            "module": "@parasaurolophus/node-red-create-hue-application-key",
            "type": "create-hue-application-key",
            "version": "1.0.0",
            "author": "parasaurolophus <apps@rader.us>",
            "desc": "Invoke the Hue Bridge API that creates an \"application key\"",
            "keywords": "philips,hue",
            "license": "MIT"
        },
        "color": "#AA77AA",
        "icon": "font-awesome/fa-lightbulb-o",
        "status": {
            "x": 440,
            "y": 100,
            "wires": [
                {
                    "id": "64ad1b43047cb836",
                    "port": 0
                }
            ]
        }
    },
    {
        "id": "e4718ecfdb248cc7",
        "type": "http request",
        "z": "75bc72a16c4da2c8",
        "name": "",
        "method": "POST",
        "ret": "obj",
        "paytoqs": "ignore",
        "url": "",
        "tls": "e79e0110c2317edb",
        "persist": false,
        "proxy": "",
        "authType": "",
        "senderr": false,
        "x": 330,
        "y": 40,
        "wires": [
            []
        ]
    },
    {
        "id": "7316ae1eef4c6295",
        "type": "change",
        "z": "75bc72a16c4da2c8",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "{\"devicetype\":$env('USERNAME'),\"generateclientkey\":true}",
                "tot": "jsonata"
            },
            {
                "t": "set",
                "p": "url",
                "pt": "msg",
                "to": "'https://' & $env('ADDRESS') & '/api'",
                "tot": "jsonata"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 160,
        "y": 40,
        "wires": [
            [
                "e4718ecfdb248cc7"
            ]
        ]
    },
    {
        "id": "64ad1b43047cb836",
        "type": "status",
        "z": "75bc72a16c4da2c8",
        "name": "",
        "scope": [
            "e4718ecfdb248cc7"
        ],
        "x": 340,
        "y": 100,
        "wires": [
            []
        ]
    },
    {
        "id": "e79e0110c2317edb",
        "type": "tls-config",
        "name": "",
        "cert": "",
        "key": "",
        "ca": "",
        "certname": "",
        "keyname": "",
        "caname": "",
        "servername": "",
        "verifyservercert": false,
        "alpnprotocol": ""
    },
    {
        "id": "4db3df0930ef9d8f",
        "type": "subflow",
        "name": "Parse Hue Event",
        "info": "",
        "category": "",
        "in": [
            {
                "x": 60,
                "y": 100,
                "wires": [
                    {
                        "id": "aaec39d8aceed484"
                    }
                ]
            }
        ],
        "out": [
            {
                "x": 980,
                "y": 60,
                "wires": [
                    {
                        "id": "b72fc87b7aa7cdaf",
                        "port": 0
                    }
                ]
            }
        ],
        "env": [
            {
                "name": "TOPIC",
                "type": "env",
                "value": "TOPIC"
            }
        ],
        "meta": {
            "module": "@parasaurolophus/node-red-parse-hue-event",
            "type": "parse-hue-event",
            "version": "1.0.0",
            "author": "parasaurolophus <apps@rader.us>",
            "desc": "Split a SSE message sent by a Philips Hue bridge into its individual status update messages",
            "keywords": "philips,hue,sse",
            "license": "MIT"
        },
        "color": "#AA77AA",
        "icon": "font-awesome/fa-lightbulb-o",
        "status": {
            "x": 980,
            "y": 140,
            "wires": [
                {
                    "id": "fdf1b3d9bae669ad",
                    "port": 0
                }
            ]
        }
    },
    {
        "id": "aaec39d8aceed484",
        "type": "change",
        "z": "4db3df0930ef9d8f",
        "name": "data",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "payload.data",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 150,
        "y": 100,
        "wires": [
            [
                "5976dc7c7bec8be9"
            ]
        ]
    },
    {
        "id": "5976dc7c7bec8be9",
        "type": "json",
        "z": "4db3df0930ef9d8f",
        "name": "",
        "property": "payload",
        "action": "obj",
        "pretty": false,
        "x": 270,
        "y": 100,
        "wires": [
            [
                "74b9d0aa10c1acc4"
            ]
        ]
    },
    {
        "id": "74b9d0aa10c1acc4",
        "type": "split",
        "z": "4db3df0930ef9d8f",
        "name": "",
        "splt": "\\n",
        "spltType": "str",
        "arraySplt": 1,
        "arraySpltType": "len",
        "stream": false,
        "addname": "",
        "x": 390,
        "y": 100,
        "wires": [
            [
                "860290b1ade8555e"
            ]
        ]
    },
    {
        "id": "860290b1ade8555e",
        "type": "change",
        "z": "4db3df0930ef9d8f",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "payload.type",
                "tot": "msg"
            },
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "payload.data",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 540,
        "y": 100,
        "wires": [
            [
                "c6e5fd16371a9896"
            ]
        ]
    },
    {
        "id": "c6e5fd16371a9896",
        "type": "split",
        "z": "4db3df0930ef9d8f",
        "name": "",
        "splt": "\\n",
        "spltType": "str",
        "arraySplt": 1,
        "arraySpltType": "len",
        "stream": false,
        "addname": "",
        "x": 690,
        "y": 100,
        "wires": [
            [
                "fdf1b3d9bae669ad",
                "b72fc87b7aa7cdaf"
            ]
        ]
    },
    {
        "id": "fdf1b3d9bae669ad",
        "type": "change",
        "z": "4db3df0930ef9d8f",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "{\"text\":topic,\"shape\":\"dot\",\"fill\":\"blue\"}",
                "tot": "jsonata"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 860,
        "y": 140,
        "wires": [
            []
        ]
    },
    {
        "id": "b72fc87b7aa7cdaf",
        "type": "change",
        "z": "4db3df0930ef9d8f",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "$env('TOPIC') & '/' &topic & '/' & payload.type & '/' & payload.id",
                "tot": "jsonata"
            },
            {
                "t": "set",
                "p": "qos",
                "pt": "msg",
                "to": "2",
                "tot": "num"
            },
            {
                "t": "set",
                "p": "retain",
                "pt": "msg",
                "to": "true",
                "tot": "bool"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 860,
        "y": 60,
        "wires": [
            []
        ]
    },
    {
        "id": "1ab3d084034d545a",
        "type": "subflow",
        "name": "Hue SSE Parameters",
        "info": "",
        "category": "",
        "in": [],
        "out": [
            {
                "x": 500,
                "y": 40,
                "wires": [
                    {
                        "id": "abed6567d8295b2f",
                        "port": 0
                    }
                ]
            }
        ],
        "env": [
            {
                "name": "ADDRESS",
                "type": "env",
                "value": "ADDRESS"
            },
            {
                "name": "KEY",
                "type": "env",
                "value": "KEY"
            }
        ],
        "meta": {
            "module": "@parasaurolophus/node-red-hue-sse-parameters",
            "type": "hue-sse-parameters",
            "version": "1.0.0",
            "author": "parasaurolophus <apps@rader.us>",
            "desc": "Send a message when the flow starts containing SSE connection parameters for a Philips Hue Bridge",
            "keywords": "philips,hue,sse",
            "license": "MIT"
        },
        "color": "#AA77AA",
        "icon": "font-awesome/fa-lightbulb-o",
        "status": {
            "x": 680,
            "y": 120,
            "wires": [
                {
                    "id": "ab1661dbd2c4feba",
                    "port": 0
                }
            ]
        }
    },
    {
        "id": "abed6567d8295b2f",
        "type": "change",
        "z": "1ab3d084034d545a",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "{\"url\":\"https://\" & $env('ADDRESS') & \"/eventstream/clip/v2\",\"initDict\":{\"withCredentials\":false,\"https\":{\"rejectUnauthorized\":false},\"headers\":{\"hue-application-key\":$env('KEY')}}}",
                "tot": "jsonata"
            },
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "hue/basement-hue",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 360,
        "y": 80,
        "wires": [
            [
                "ab1661dbd2c4feba"
            ]
        ]
    },
    {
        "id": "f572f51e2c22ff75",
        "type": "inject",
        "z": "1ab3d084034d545a",
        "name": "",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 190,
        "y": 80,
        "wires": [
            [
                "abed6567d8295b2f"
            ]
        ]
    },
    {
        "id": "ab1661dbd2c4feba",
        "type": "change",
        "z": "1ab3d084034d545a",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "{\"text\":$env('TOPIC'),\"shape\":\"dot\",\"fill\":\"blue\"}",
                "tot": "jsonata"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 560,
        "y": 120,
        "wires": [
            []
        ]
    },
    {
        "id": "2ab2fba24f042008",
        "type": "subflow",
        "name": "Server-Sent Events",
        "info": "Automatically reconnect if:\n\n- `EventSource` status (`readyState`) reaches 2 (\"failed\"), or\n\n- Too much time elapses without receiving any server-sent events\n\n### Input\n\n`msg.payload` is passed through to the `EventSource` node wrapped by this subflow. See the `EventSource` node documentation for details.\n\n### Outputs\n\nThe outputs of the wrapped `EventSource` node are passed through to the corresponding outputs of this subflow. See the `EventSource` node documentation for details.\n\n### Details\n\nThis subflow provides a fully-elaborately, working example of how to use the `EventSource` node in a real world scenario. (It has been verified to work sufficiently well in conjunction with the [Hue API V2](https://developers.meethue.com/develop/hue-api-v2/) in a reasonably useful [home automation system](https://github.com/parasaurolophus/waubesa).)\n\nThe intent is to be able to drop an instance of this subflow into a flow exactly if it were a bare `EventSource` node. The additional functionality provided by the subflow is to monitor the outputs and status of the wrapped `EventSource` and attempt to stay connected even in case of issues like temporary network connectivity or SSE server outages and the like. It does this by connecting the outputs of the wrapped `EventSource` node to a `trigger` node acting as a watchdog timer. To that end, this subflow supports a `TIMEOUT` environment variable that can be used to specify the time (in milliseconds) that the wrapped `EventSource` should be given to show signs of activity before an attempt is made to forcibly reconnect.",
        "category": "",
        "in": [
            {
                "x": 680,
                "y": 100,
                "wires": [
                    {
                        "id": "e4aabc4086d580e2"
                    },
                    {
                        "id": "e833332d7ac1f2b3"
                    }
                ]
            }
        ],
        "out": [
            {
                "x": 1280,
                "y": 80,
                "wires": [
                    {
                        "id": "5e6926c7941d3796",
                        "port": 0
                    }
                ]
            },
            {
                "x": 1300,
                "y": 200,
                "wires": [
                    {
                        "id": "5e6926c7941d3796",
                        "port": 1
                    }
                ]
            },
            {
                "x": 1300,
                "y": 260,
                "wires": [
                    {
                        "id": "5e6926c7941d3796",
                        "port": 2
                    }
                ]
            }
        ],
        "env": [
            {
                "name": "TIMEOUT",
                "type": "num",
                "value": "60000"
            }
        ],
        "meta": {
            "module": "@parasaurolophus/node-red-server-side-events",
            "type": "server-side-events",
            "version": "1.0.0",
            "author": "parasaurolophus <apps@rader.us>",
            "desc": "Add watchdog timer to @parasaurolophus/node-red-eventsource",
            "keywords": "sse,eventsource",
            "license": "MIT"
        },
        "color": "#E7E7AE",
        "outputLabels": [
            "sse",
            "onopen",
            "onerror"
        ],
        "icon": "node-red/white-globe.svg",
        "status": {
            "x": 220,
            "y": 300,
            "wires": [
                {
                    "id": "f28aef1d8e40b68d",
                    "port": 0
                }
            ]
        }
    },
    {
        "id": "5e6926c7941d3796",
        "type": "EventSource",
        "z": "2ab2fba24f042008",
        "name": "",
        "x": 1030,
        "y": 180,
        "wires": [
            [
                "0e0cf6b1c9d71274"
            ],
            [
                "0e0cf6b1c9d71274"
            ],
            [
                "49d1a92b085fa599"
            ]
        ]
    },
    {
        "id": "0e0cf6b1c9d71274",
        "type": "link out",
        "z": "2ab2fba24f042008",
        "name": "watchdog",
        "mode": "link",
        "links": [
            "2103cb64e2ef21a4",
            "cad285a88a170d06"
        ],
        "x": 1255,
        "y": 140,
        "wires": []
    },
    {
        "id": "49d1a92b085fa599",
        "type": "link out",
        "z": "2ab2fba24f042008",
        "name": "reset",
        "mode": "link",
        "links": [
            "643dee1ec8d68632",
            "cad285a88a170d06"
        ],
        "x": 1255,
        "y": 320,
        "wires": []
    },
    {
        "id": "f28aef1d8e40b68d",
        "type": "status",
        "z": "2ab2fba24f042008",
        "name": "",
        "scope": [
            "5e6926c7941d3796"
        ],
        "x": 100,
        "y": 260,
        "wires": [
            [
                "724d55ad8b7550cd"
            ]
        ]
    },
    {
        "id": "724d55ad8b7550cd",
        "type": "switch",
        "z": "2ab2fba24f042008",
        "name": "readyState = 2?",
        "property": "status.text",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "2",
                "vt": "str"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "false",
        "repair": false,
        "outputs": 2,
        "x": 280,
        "y": 220,
        "wires": [
            [
                "04950d20f8af6c50"
            ],
            [
                "82fcf81f91ebe2a7"
            ]
        ]
    },
    {
        "id": "82fcf81f91ebe2a7",
        "type": "change",
        "z": "2ab2fba24f042008",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "reset",
                "pt": "msg",
                "to": "true",
                "tot": "bool"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 480,
        "y": 260,
        "wires": [
            [
                "36a1128a4f7a3d2e"
            ]
        ]
    },
    {
        "id": "36a1128a4f7a3d2e",
        "type": "trigger",
        "z": "2ab2fba24f042008",
        "name": "watchdog",
        "op1": "",
        "op2": "",
        "op1type": "nul",
        "op2type": "date",
        "duration": "1",
        "extend": true,
        "overrideDelay": true,
        "units": "min",
        "reset": "",
        "bytopic": "all",
        "topic": "topic",
        "outputs": 1,
        "x": 660,
        "y": 220,
        "wires": [
            [
                "2c299b56638dd5ed"
            ]
        ]
    },
    {
        "id": "2103cb64e2ef21a4",
        "type": "link in",
        "z": "2ab2fba24f042008",
        "name": "watchdog",
        "links": [
            "0e0cf6b1c9d71274"
        ],
        "x": 345,
        "y": 140,
        "wires": [
            [
                "04950d20f8af6c50"
            ]
        ],
        "info": "// nrlint align-to-grid:off\n"
    },
    {
        "id": "643dee1ec8d68632",
        "type": "link in",
        "z": "2ab2fba24f042008",
        "name": "reset",
        "links": [
            "49d1a92b085fa599",
            "e833332d7ac1f2b3"
        ],
        "x": 345,
        "y": 300,
        "wires": [
            [
                "82fcf81f91ebe2a7"
            ]
        ],
        "info": "// nrlint align-to-grid:off\n"
    },
    {
        "id": "2c299b56638dd5ed",
        "type": "change",
        "z": "2ab2fba24f042008",
        "name": "get flow.parameters",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "parameters",
                "tot": "flow"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 830,
        "y": 220,
        "wires": [
            [
                "5e6926c7941d3796"
            ]
        ]
    },
    {
        "id": "e4aabc4086d580e2",
        "type": "change",
        "z": "2ab2fba24f042008",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "parameters",
                "pt": "flow",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 830,
        "y": 140,
        "wires": [
            [
                "5e6926c7941d3796"
            ]
        ]
    },
    {
        "id": "e833332d7ac1f2b3",
        "type": "link out",
        "z": "2ab2fba24f042008",
        "name": "reset",
        "mode": "link",
        "links": [
            "643dee1ec8d68632"
        ],
        "x": 755,
        "y": 60,
        "wires": []
    },
    {
        "id": "2aa0a1d8f733e06d",
        "type": "comment",
        "z": "2ab2fba24f042008",
        "name": "Automatically reconnect",
        "info": "Automatically reconnect if:\n\n- `EventSource` status (`readyState`) reaches 2 (\"failed\"), or\n- Too much time elapses without receiving any server-sent events",
        "x": 140,
        "y": 140,
        "wires": []
    },
    {
        "id": "04950d20f8af6c50",
        "type": "change",
        "z": "2ab2fba24f042008",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "delay",
                "pt": "msg",
                "to": "TIMEOUT",
                "tot": "env"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 480,
        "y": 180,
        "wires": [
            [
                "36a1128a4f7a3d2e"
            ]
        ]
    },
    {
        "id": "be726339755d3c26",
        "type": "tab",
        "label": "Automatic Reconnect",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "9ac80b23dbfe246e",
        "type": "group",
        "z": "be726339755d3c26",
        "name": "EventSource with watchdog timer",
        "style": {
            "stroke": "none",
            "fill": "#000000",
            "fill-opacity": "0.1",
            "label": true,
            "color": "#000000"
        },
        "nodes": [
            "9035761b96a49b78",
            "c83de2df7ce6ce2b",
            "e61fe209dfd74358",
            "2c0929cd88a28b21",
            "023a075a2648d638",
            "1753bf161389c944"
        ],
        "env": [
            {
                "name": "ADDRESS",
                "value": "",
                "type": "str"
            },
            {
                "name": "KEY",
                "value": "",
                "type": "str"
            },
            {
                "name": "TOPIC",
                "value": "",
                "type": "str"
            }
        ],
        "x": 34,
        "y": 39,
        "w": 872,
        "h": 182,
        "info": "The `Server-Sent Events` subflow wraps an `EventSource` node. It adds a watchdog timer to keep the connection alive."
    },
    {
        "id": "f03deeed35ea4ed9",
        "type": "group",
        "z": "be726339755d3c26",
        "name": "Use this to obtain a client access token if you don't already have one",
        "style": {
            "stroke": "none",
            "fill": "#ff0000",
            "fill-opacity": "0.1",
            "label": true,
            "color": "#ff0000"
        },
        "nodes": [
            "ed153191fc9042e0",
            "f7cab6ed93a25248",
            "7ef02fa56e5eb04a",
            "259bdd5d7d984d09"
        ],
        "env": [
            {
                "name": "ADDRESS",
                "value": "",
                "type": "str"
            },
            {
                "name": "USERNAME",
                "value": "",
                "type": "str"
            }
        ],
        "x": 34,
        "y": 259,
        "w": 672,
        "h": 142,
        "info": "Use this to create a security token for accessing your bridge's API if you do not already have one. See <https://developers.meethue.com/develop/hue-api-v2/getting-started/> for details."
    },
    {
        "id": "9035761b96a49b78",
        "type": "subflow:2ab2fba24f042008",
        "z": "be726339755d3c26",
        "g": "9ac80b23dbfe246e",
        "name": "",
        "x": 370,
        "y": 120,
        "wires": [
            [
                "e61fe209dfd74358"
            ],
            [
                "2c0929cd88a28b21"
            ],
            [
                "2c0929cd88a28b21"
            ]
        ]
    },
    {
        "id": "c83de2df7ce6ce2b",
        "type": "subflow:1ab3d084034d545a",
        "z": "be726339755d3c26",
        "g": "9ac80b23dbfe246e",
        "name": "",
        "x": 160,
        "y": 120,
        "wires": [
            [
                "9035761b96a49b78"
            ]
        ]
    },
    {
        "id": "e61fe209dfd74358",
        "type": "subflow:4db3df0930ef9d8f",
        "z": "be726339755d3c26",
        "g": "9ac80b23dbfe246e",
        "name": "",
        "x": 610,
        "y": 80,
        "wires": [
            [
                "1753bf161389c944"
            ]
        ]
    },
    {
        "id": "2c0929cd88a28b21",
        "type": "change",
        "z": "be726339755d3c26",
        "g": "9ac80b23dbfe246e",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "$env('TOPIC') & '/' & topic",
                "tot": "jsonata"
            },
            {
                "t": "set",
                "p": "qos",
                "pt": "msg",
                "to": "2",
                "tot": "num"
            },
            {
                "t": "set",
                "p": "retain",
                "pt": "msg",
                "to": "true",
                "tot": "bool"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 620,
        "y": 160,
        "wires": [
            [
                "1753bf161389c944"
            ]
        ]
    },
    {
        "id": "023a075a2648d638",
        "type": "comment",
        "z": "be726339755d3c26",
        "g": "9ac80b23dbfe246e",
        "name": "Set group's environment variables",
        "info": "Change the environment variables defined by this group to match your Hue Bridge configuration:\n\n| Env Var   | Description                   |\n|-----------|-------------------------------|\n| `ADDRESS` | IP address of your Hue bridge |\n| `KEY`     | Client access token           |\n| `TOPIC`   | Base MQTT topic prefix        |",
        "x": 200,
        "y": 180,
        "wires": []
    },
    {
        "id": "ed153191fc9042e0",
        "type": "inject",
        "z": "be726339755d3c26",
        "g": "f03deeed35ea4ed9",
        "name": "",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 140,
        "y": 300,
        "wires": [
            [
                "259bdd5d7d984d09"
            ]
        ]
    },
    {
        "id": "f7cab6ed93a25248",
        "type": "debug",
        "z": "be726339755d3c26",
        "g": "f03deeed35ea4ed9",
        "name": "hue application key",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": true,
        "complete": "true",
        "targetType": "full",
        "statusVal": "payload[0].success.username",
        "statusType": "msg",
        "x": 570,
        "y": 300,
        "wires": []
    },
    {
        "id": "7ef02fa56e5eb04a",
        "type": "comment",
        "z": "be726339755d3c26",
        "g": "f03deeed35ea4ed9",
        "name": "Set group's environment variables",
        "info": "Change the environment variables defined by this group to match your Hue Bridge configuration:\n\n| Env Var    | Description                                  |\n|------------|----------------------------------------------|\n| `ADDRESS`  | IP address of your Hue bridge                |\n| `USERNAME` | User name for which a key is to be generated |\n",
        "x": 200,
        "y": 360,
        "wires": []
    },
    {
        "id": "1753bf161389c944",
        "type": "debug",
        "z": "be726339755d3c26",
        "g": "9ac80b23dbfe246e",
        "name": "hue sse",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": true,
        "complete": "true",
        "targetType": "full",
        "statusVal": "topic",
        "statusType": "msg",
        "x": 800,
        "y": 120,
        "wires": []
    },
    {
        "id": "259bdd5d7d984d09",
        "type": "subflow:75bc72a16c4da2c8",
        "z": "be726339755d3c26",
        "g": "f03deeed35ea4ed9",
        "name": "",
        "env": [
            {
                "name": "ADDRESS",
                "value": "ADDRESS",
                "type": "env"
            },
            {
                "name": "USERNAME",
                "value": "USERNAME",
                "type": "env"
            }
        ],
        "x": 340,
        "y": 300,
        "wires": [
            [
                "f7cab6ed93a25248"
            ]
        ]
    }
]